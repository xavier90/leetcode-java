Given two strings s and t, write a function to determine if t is an anagram of s.

For example,
s = "anagram", t = "nagaram", return true.
s = "rat", t = "car", return false.

Note:
You may assume the string contains only lowercase alphabets.

Follow up:
What if the inputs contain unicode characters? How would you adapt your solution to such case?

自己的解法
public class solution {
    public boolean isAnagram(String s, String t) {
        if(s == null || t == null) {
            if(s == t) {
                return true;
            } else {
                return false;
            }
        }
        
        if(s.length() != t.length()) {
            return false;
        }
        char s1 = s.toCharArray();
        char t1 = t.toCharArray();
        
        Arrays.sort(s1);
        Arrays.sort(t1);
        
        int i = 0;
        while(i < s1.length) {
            if(s1[i] != t1[i]) {
                return false;
            }
            i++;
        }
        
        return true;
    }
}

别人家的解法
public class solution {
    public boolean isAnagram(String s, String t) {
        int[] alphabet = new int[26];
        for(int i = 0; i < s.length(); i++) {
            alphabet[s.charAt(i) - 'a']++;
        }
        
        for(int i = 0; i < t.length(); i++) {
            alphabet[s.charAt(i) - 'a']--;
        }
        
        for(int i : alphabet) {
            if(i != 0) {
                return false;
            }
        }
        return true;
    }
}

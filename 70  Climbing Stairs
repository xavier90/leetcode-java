You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

此题跟fibonacci原理类似

public class solution {
    public int climbStairs(int n) {
        if(n == 0) return 0;
        if(n == 1) return 1;
        if(n == 2) return 2;
        
        int oneLeft = 2, twoLeft = 1;
        int all = 0;
        for(int i = 2; i < n; i++) {
            all = oneLeft + twoLeft;
            twoLeft = oneLeft;
            oneLeft = all;
        }
        return all;
    }
}
